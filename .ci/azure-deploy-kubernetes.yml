parameters:
  - name: kubeconfig
    type: string
  - name: stage
    type: string

steps:
  - checkout: self

  - task: KubectlInstaller@0
    displayName: Install kubectl

  - task: DownloadSecureFile@1
    name: kubeconfig
    inputs:
      secureFile: ${{ parameters.kubeconfig }}

  - script: |
      export DOCKER_IMAGE="$(DOCKER_REGISTRY):$(BUILD_NUMBER)";
      export KUBECONFIG=$(kubeconfig.secureFilePath)

      cat ./.ci/_stages/${{ parameters.kubeconfig }}.env
      export $(cat ./.ci/_stages/${{ parameters.stage }}.env | xargs)

      kubectl apply -f k8s/postgres.yaml

      envsubst < k8s/app.yaml > k8s/app.yaml.tmp && mv k8s/app.yaml.tmp k8s/app.yaml
      cat k8s/app.yaml

      kubectl apply -f k8s/app.yaml

      (kubectl -n templateapp create configmap templateapp-configmap --from-env-file=./.ci/_stages/${{ parameters.stage }}.env -o yaml --dry-run=client | kubectl replace -f -)

    displayName: deploy
