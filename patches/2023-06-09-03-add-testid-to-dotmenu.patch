Index: frontend/src/components/uikit/menu/DotMenu.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/uikit/menu/DotMenu.tsx b/frontend/src/components/uikit/menu/DotMenu.tsx
--- a/frontend/src/components/uikit/menu/DotMenu.tsx	(revision 0d2e88ba6b096bf0129a01cbc6a3b6c193fae574)
+++ b/frontend/src/components/uikit/menu/DotMenu.tsx	(revision c4f135936ea6157a73e00ef78ad3d1b2b4f16402)
@@ -5,6 +5,7 @@
 
 export type DotMenuProps = Omit<AppMenuProps, 'anchorEl' | 'open'> & {
   size?: 'small' | 'medium';
+  testId?: string;
 };
 
 export const DotMenu: React.FC<DotMenuProps> = React.memo(function DotMenu(
@@ -24,7 +25,11 @@
           setIsMenuShown(true);
         }}
       >
-        <Dots className={styles.dotMenuImage} {...style} />
+        <Dots
+          className={styles.dotMenuImage}
+          {...style}
+          data-test-id={props.testId}
+        />
       </div>
       <AppMenu
         {...props}
Index: frontend/src/components/uikit/menu/AppMenu.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/uikit/menu/AppMenu.tsx b/frontend/src/components/uikit/menu/AppMenu.tsx
--- a/frontend/src/components/uikit/menu/AppMenu.tsx	(revision 0d2e88ba6b096bf0129a01cbc6a3b6c193fae574)
+++ b/frontend/src/components/uikit/menu/AppMenu.tsx	(revision c4f135936ea6157a73e00ef78ad3d1b2b4f16402)
@@ -28,6 +28,8 @@
    * If `direction` is specified it takes the priority over `anchorOrigin` & `transformOrigin`.
    */
   direction?: MenuDirection;
+
+  testId?: string;
 };
 
 const classes: MenuProps['classes'] = {
@@ -35,7 +37,7 @@
   list: styles.list,
 };
 export const AppMenu: React.FC<AppMenuProps> = (props) => {
-  const { menuItems, direction, ...rest } = props;
+  const { menuItems, direction, testId, ...rest } = props;
   const onClose: NonNullable<MenuProps['onClose']> = useCallback(
     (ev: any, reason) => {
       ev.stopPropagation();
@@ -54,6 +56,7 @@
   return (
     <Menu
       {...rest}
+      data-test-id={testId}
       {...(direction !== undefined
         ? anchorTransformOrigin[direction]
         : undefined)}
