Index: frontend/src/components/uikit/suspense/ErrorBoundary.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/uikit/suspense/ErrorBoundary.tsx b/frontend/src/components/uikit/suspense/ErrorBoundary.tsx
--- a/frontend/src/components/uikit/suspense/ErrorBoundary.tsx	(revision 4324e76e051b489e8801b65041ab8560299a7cdf)
+++ b/frontend/src/components/uikit/suspense/ErrorBoundary.tsx	(revision 0d2e88ba6b096bf0129a01cbc6a3b6c193fae574)
@@ -6,7 +6,10 @@
 import styles from './Loading.module.scss';
 import { QueryFactory } from 'services/api';
 import { isAxiosError } from 'axios';
-import { useQueryErrorResetBoundary } from '@tanstack/react-query';
+import {
+  useQueryClient,
+  useQueryErrorResetBoundary,
+} from '@tanstack/react-query';
 
 type ErrorBoundaryFallbackProps = {
   error: Error;
@@ -20,6 +23,7 @@
 export const ErrorBoundaryFallback = (props: ErrorBoundaryFallbackProps) => {
   const location = window.location.href;
   const i18n = useTranslation();
+  const queryClient = useQueryClient();
   const [initialLocation] = useState(window.location.href);
   useEffect(() => {
     if (initialLocation !== location) {
@@ -63,6 +67,9 @@
             <div>
               <Button
                 onClick={async () => {
+                  void queryClient.refetchQueries({
+                    predicate: (x) => !!x.state.error,
+                  });
                   queryErrorReset.reset();
                   props.resetError();
                 }}
