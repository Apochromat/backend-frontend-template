Index: frontend/src/components/uikit/suspense/ErrorBoundary.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/uikit/suspense/ErrorBoundary.tsx b/frontend/src/components/uikit/suspense/ErrorBoundary.tsx
--- a/frontend/src/components/uikit/suspense/ErrorBoundary.tsx	(revision cbe79a7cb66036b2dc1aa127fcc5170b81c96a90)
+++ b/frontend/src/components/uikit/suspense/ErrorBoundary.tsx	(revision 4324e76e051b489e8801b65041ab8560299a7cdf)
@@ -28,7 +28,9 @@
   }, [initialLocation, location]);
 
   const errorString = errorToString(props.error);
-  const versionQuery = QueryFactory.VersionQuery.useVersionQuery();
+  const versionQuery = QueryFactory.VersionQuery.useVersionQuery({
+    useErrorBoundary: false,
+  });
   const isServerAvailable = !!versionQuery.data;
 
   // if error is NetworkError, but server is available, there's a high chance we are trying to request an old chunk of JS or CSS
@@ -44,7 +46,7 @@
     <div className={styles.flexContainer}>
       <div className={styles.flexLoadingData} data-test-id="loading-error">
         <div className={styles.loading}>
-          <h1>{errorToString(props.error)}</h1>
+          <h1>{errorString}</h1>
           {isServerUpdated ? (
             <>
               <div className={styles.serverUpdated}>
